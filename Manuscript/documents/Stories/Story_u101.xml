<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<idPkg:Story xmlns:idPkg="http://ns.adobe.com/AdobeInDesign/idml/1.0/packaging" DOMVersion="14.0">
	<Story Self="u101" UserText="true" IsEndnoteStory="false" AppliedTOCStyle="n" TrackChanges="false" StoryTitle="$ID/" AppliedNamedGrid="n">
		<StoryPreference OpticalMarginAlignment="false" OpticalMarginSize="12" FrameType="TextFrameType" StoryOrientation="Horizontal" StoryDirection="LeftToRightDirection" />
		<InCopyExportOption IncludeGraphicProxies="true" IncludeAllResources="false" />
		<ParagraphStyleRange AppliedParagraphStyle="ParagraphStyle/$ID/NormalParagraphStyle" Justification="CenterAlign">
			<CharacterStyleRange AppliedCharacterStyle="CharacterStyle/$ID/[No character style]" FillColor="Color/u147" PointSize="36">
				<Properties>
					<AppliedFont type="string">Kefa</AppliedFont>
				</Properties>
				<Br />
				<Content>INTRODUCTION</Content>
			</CharacterStyleRange>
			<CharacterStyleRange AppliedCharacterStyle="CharacterStyle/$ID/[No character style]" PointSize="36">
				<Properties>
					<AppliedFont type="string">Kefa</AppliedFont>
				</Properties>
				<Br />
			</CharacterStyleRange>
			<CharacterStyleRange AppliedCharacterStyle="CharacterStyle/$ID/[No character style]">
				<Properties>
					<AppliedFont type="string">Kefa</AppliedFont>
				</Properties>
				<Br />
			</CharacterStyleRange>
		</ParagraphStyleRange>
		<ParagraphStyleRange AppliedParagraphStyle="ParagraphStyle/$ID/NormalParagraphStyle" DropCapCharacters="1" DropCapLines="1" Justification="CenterAlign">
			<CharacterStyleRange AppliedCharacterStyle="CharacterStyle/$ID/[No character style]">
				<Properties>
					<Leading type="unit">24</Leading>
					<AppliedFont type="string">Kefa</AppliedFont>
				</Properties>
				<Content>Flutter widgets are built using a modern react-style framework, which takes inspiration from React. The central idea is that you build your UI out of widgets. Widgets describe what their view should look like given their current configuration and state. When a widget’s state changes, the widget rebuilds its description, which the framework diffs against the previous description in order to determine the minimal changes needed in the underlying render tree to transition from one state to the next.</Content>
				<Rectangle Self="u178" ContentType="GraphicType" StoryTitle="$ID/" OverriddenPageItemProps="" Visible="true" Name="$ID/" HorizontalLayoutConstraints="FlexibleDimension FixedDimension FlexibleDimension" VerticalLayoutConstraints="FlexibleDimension FixedDimension FlexibleDimension" GradientFillStart="0 0" GradientFillLength="0" GradientFillAngle="0" GradientStrokeStart="0 0" GradientStrokeLength="0" GradientStrokeAngle="0" Locked="false" LocalDisplaySetting="Default" GradientFillHiliteLength="0" GradientFillHiliteAngle="0" GradientStrokeHiliteLength="0" GradientStrokeHiliteAngle="0" AppliedObjectStyle="ObjectStyle/$ID/[None]" ItemTransform="1 0 0 1 167.1000030517578 -226.46325370279152" ParentInterfaceChangeCount="138508 1495206335 11268 1929816178 138558 1576377596" TargetInterfaceChangeCount="" LastUpdatedInterfaceChangeCount="">
					<Properties>
						<PathGeometry>
							<GeometryPathType PathOpen="false">
								<PathPointArray>
									<PathPointType Anchor="-134.12499694824217 -149.60409309689211" LeftDirection="-134.12499694824217 -149.60409309689211" RightDirection="-134.12499694824217 -149.60409309689211" />
									<PathPointType Anchor="-134.12499694824217 226.46325370279152" LeftDirection="-134.12499694824217 226.46325370279152" RightDirection="-134.12499694824217 226.46325370279152" />
									<PathPointType Anchor="126.36250610351571 226.46325370279152" LeftDirection="126.36250610351571 226.46325370279152" RightDirection="126.36250610351571 226.46325370279152" />
									<PathPointType Anchor="126.36250610351571 -149.60409309689211" LeftDirection="126.36250610351571 -149.60409309689211" RightDirection="126.36250610351571 -149.60409309689211" />
								</PathPointArray>
							</GeometryPathType>
						</PathGeometry>
					</Properties>
					<FrameFittingOption LeftCrop="0.9598441490760479" TopCrop="-1.0675007903047344" RightCrop="-1.5785980224610512" BottomCrop="-1.6963318295931913" FittingOnEmptyFrame="ContentToFrame" />
					<ObjectExportOption AltTextSourceType="SourceXMLStructure" ActualTextSourceType="SourceXMLStructure" CustomAltText="$ID/" CustomActualText="$ID/" ApplyTagType="TagFromStructure" ImageConversionType="JPEG" ImageExportResolution="Ppi300" GIFOptionsPalette="AdaptivePalette" GIFOptionsInterlaced="true" JPEGOptionsQuality="High" JPEGOptionsFormat="BaselineEncoding" ImageAlignment="AlignLeft" ImageSpaceBefore="0" ImageSpaceAfter="0" UseImagePageBreak="false" ImagePageBreak="PageBreakBefore" CustomImageAlignment="false" SpaceUnit="CssPixel" CustomLayout="false" CustomLayoutType="AlignmentAndSpacing" EpubType="$ID/" SizeType="DefaultSize" CustomSize="$ID/" PreserveAppearanceFromLayout="PreserveAppearanceDefault">
						<Properties>
							<AltMetadataProperty NamespacePrefix="$ID/" PropertyPath="$ID/" />
							<ActualMetadataProperty NamespacePrefix="$ID/" PropertyPath="$ID/" />
						</Properties>
					</ObjectExportOption>
					<AnchoredObjectSetting AnchorYoffset="-455.66432798197945" />
					<TextWrapPreference Inverse="false" ApplyToMasterPageOnly="false" TextWrapSide="BothSides" TextWrapMode="JumpObjectTextWrap">
						<Properties>
							<TextWrapOffset Top="0" Left="0" Bottom="0" Right="0" />
						</Properties>
						<ContourOption ContourType="SameAsClipping" IncludeInsideEdges="false" ContourPathName="$ID/" />
					</TextWrapPreference>
					<InCopyExportOption IncludeGraphicProxies="true" IncludeAllResources="false" />
					<Image Self="u174" Space="$ID/#Links_RGB" ActualPpi="72 72" EffectivePpi="91 96" ImageRenderingIntent="UseColorSettings" OverriddenPageItemProps="" LocalDisplaySetting="Default" ImageTypeName="$ID/Portable Network Graphics (PNG)" AppliedObjectStyle="ObjectStyle/$ID/[None]" ItemTransform="0.7878787878787878 0 0 0.748 -134.88123779296873 -148.8056025057442" Visible="true" Name="$ID/" HorizontalLayoutConstraints="FlexibleDimension FixedDimension FlexibleDimension" VerticalLayoutConstraints="FlexibleDimension FixedDimension FlexibleDimension" GradientFillStart="0 0" GradientFillLength="0" GradientFillAngle="0" GradientFillHiliteLength="0" GradientFillHiliteAngle="0" ParentInterfaceChangeCount="138508 798250072 138558 1929816178" TargetInterfaceChangeCount="" LastUpdatedInterfaceChangeCount="">
						<Properties>
							<Profile type="string">$ID/None</Profile>
							<GraphicBounds Left="0" Top="0" Right="330" Bottom="500" />
						</Properties>
						<ClippingPathSettings ClippingType="None" InvertPath="false" IncludeInsideEdges="false" RestrictToFrame="false" UseHighResolutionImage="true" Threshold="25" Tolerance="2" InsetFrame="0" AppliedPathName="$ID/" Index="-1" />
						<ImageIOPreference ApplyPhotoshopClippingPath="true" AllowAutoEmbedding="true" AlphaChannelName="$ID/kNoneName" />
						<TextWrapPreference Inverse="false" ApplyToMasterPageOnly="false" TextWrapSide="BothSides" TextWrapMode="None">
							<Properties>
								<TextWrapOffset Top="0" Left="0" Bottom="0" Right="0" />
							</Properties>
							<ContourOption ContourType="SameAsClipping" IncludeInsideEdges="false" ContourPathName="$ID/" />
						</TextWrapPreference>
						<Link Self="u177" AssetURL="$ID/" AssetID="$ID/" LinkResourceURI="file:/Users/Brain/Downloads/Book%20Cover%206.png" LinkResourceFormat="$ID/Portable Network Graphics (PNG)" StoredState="Normal" LinkClassID="35906" LinkClientID="257" LinkResourceModified="false" LinkObjectModified="false" ShowInUI="true" CanEmbed="true" CanUnembed="true" CanPackage="true" ImportPolicy="NoAutoImport" ExportPolicy="NoAutoExport" LinkImportStamp="file 131904510221548640 88043" LinkImportModificationTime="2018-12-28T11:40:22" LinkImportTime="2019-02-05T13:40:10" LinkResourceSize="0~157eb" RenditionData="Actual" />
					</Image>
				</Rectangle>
				<Br />
			</CharacterStyleRange>
		</ParagraphStyleRange>
		<ParagraphStyleRange AppliedParagraphStyle="ParagraphStyle/$ID/NormalParagraphStyle">
			<CharacterStyleRange AppliedCharacterStyle="CharacterStyle/$ID/[No character style]">
				<Properties>
					<AppliedFont type="string">Kefa</AppliedFont>
				</Properties>
				<Br />
				<Content>Flutter widgets are built using a modern react-style framework, which takes inspiration from React. The central idea is that you build your UI out of widgets. Widgets describe what their view should look like given their current configuration and state. When a widget’s state changes, the widget rebuilds its description, which the framework diffs against the previous description in order to determine the minimal changes needed in the underlying render tree to transition from one state to the next. asda sdas das das das das das das das das das da sd asd asd as d asd as das da sd asd as da sd as das d asd asd as das da sd asd as das dasd asd asd as das da sd asd as das das d asd asd as das d asd as dasda sd sd asd as d asd as d asd asd  Flutter widgets are built using a modern react-style framework, which takes inspiration from React. The central idea is that you build your UI out of widgets. Widgets describe what their view should look like given their current configuration and state. When a widget’s state changes, the widget rebuilds its description, which the framework diffs against the previous description in order to determine the minimal changes needed in the underlying render tree to transition from one state to the next. Flutter widgets are built using a modern react-style framework, which takes inspiration from React. The central idea is that you build your UI out of widgets. Widgets describe what their view should look like given their current configuration and state. When a widget’s state changes, the widget rebuilds its description, which the framework diffs against the previous description in order to determine the minimal changes needed in the underlying render tree to transition from one state to the next. Flutter widgets are built using a modern react-style framework, which takes inspiration from React. The central idea is that you build your UI out of widgets. Widgets describe what their view should look like given their current configuration and state. When a widget’s state changes, the widget rebuilds its description, which the framework diffs against the previous description in order to determine the minimal changes needed in the underlying render tree to transition from one state to the next. Flutter widgets are built using a modern react-style framework, which takes inspiration from React. The central idea is that you build your UI out of widgets. Widgets describe what their view should look like given their current configuration and state. When a widget’s state changes, the widget rebuilds its description, which the framework diffs against the previous description in order to determine the minimal changes needed in the underlying render tree to transition from one state to the next. Flutter widgets are built using a modern react-style framework, which takes inspiration from React. The central idea is that you build your UI out of widgets. Widgets describe what their view should look like given their current configuration and state. When a widget’s state changes, the widget rebuilds its description, which the framework diffs against the previous description in order to determine the minimal changes needed in the underlying render tree to transition from one state to the next.</Content>
				<Br />
				<Br />
			</CharacterStyleRange>
		</ParagraphStyleRange>
		<ParagraphStyleRange AppliedParagraphStyle="ParagraphStyle/$ID/NormalParagraphStyle" LeftIndent="18" FirstLineIndent="-18" Justification="CenterAlign" BulletsAndNumberingListType="NumberedList" NumberingContinue="false">
			<CharacterStyleRange AppliedCharacterStyle="CharacterStyle/$ID/[No character style]">
				<Properties>
					<AppliedFont type="string">Kefa</AppliedFont>
				</Properties>
				<Content>hello world</Content>
				<Br />
			</CharacterStyleRange>
		</ParagraphStyleRange>
		<ParagraphStyleRange AppliedParagraphStyle="ParagraphStyle/$ID/NormalParagraphStyle" LeftIndent="18" FirstLineIndent="-18" Justification="CenterAlign" BulletsAndNumberingListType="NumberedList">
			<CharacterStyleRange AppliedCharacterStyle="CharacterStyle/$ID/[No character style]">
				<Properties>
					<AppliedFont type="string">Kefa</AppliedFont>
				</Properties>
				<Content>hello world 2</Content>
				<Br />
				<Content>hello world 3</Content>
			</CharacterStyleRange>
		</ParagraphStyleRange>
	</Story>
</idPkg:Story>
